// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
    // shadowDatabaseUrl = env("SHADOW_DATABASE_URL") // Important: Do not use the same values for url and shadowDatabaseUrl
}

model Profile {
    id           Int     @id @default(autoincrement())
    supabase_uid String  @unique
    email        String
    display_name String?

    memberships Membership[]

    @@map("profile")
}

enum ACCOUNT_ACCESS {
    READ_ONLY
    READ_WRITE
    ADMIN
    OWNER
}

model Membership {
    id         Int            @id @default(autoincrement())
    profile_id Int
    account_id Int
    account    Account        @relation(fields: [account_id], references: [id])
    profile    Profile        @relation(fields: [profile_id], references: [id])
    access     ACCOUNT_ACCESS @default(READ_ONLY)
    pending    Boolean        @default(false)

    @@unique([profile_id, account_id])
    @@map("membership")
}

model Account {
    id                     Int          @id @default(autoincrement())
    name                   String
    current_period_ends    DateTime     @default(now())
    features               String[]
    plan_id                Int
    plan                   Plan         @relation(fields: [plan_id], references: [id])
    plan_name              String
    members                Membership[]
    notes                  Note[]
    max_notes              Int          @default(100)
    stripe_subscription_id String?
    stripe_customer_id     String?
    max_members            Int          @default(1)
    join_password          String       @unique

    @@map("account")
}

model Plan {
    id                Int       @id @default(autoincrement())
    name              String    @unique
    features          String[]
    accounts          Account[]
    max_notes         Int       @default(100)
    stripe_product_id String?
    max_members       Int       @default(1)

    @@map("plan")
}

model Note {
    id         Int      @id @default(autoincrement())
    account_id Int?
    account    Account? @relation(fields: [account_id], references: [id])

    note_text String

    @@map("note")
}
