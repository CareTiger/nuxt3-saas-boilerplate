// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider          = "postgresql"
    url               = env("DATABASE_URL")
    shadowDatabaseUrl = env("SHADOW_DATABASE_URL")
    // Can't use same values for url and shadowDatabaseUrl
}

model Profile {
    id               Int       @id @default(autoincrement())
    user_uid         String    @unique
    email            String    @unique
    display_name     String?
    bio              String?
    first_name       String?
    last_name        String?
    dob              DateTime?
    profile_location String?
    role             ROLE      @default(USER)
    notes            Note[]
    account          Account?
    created_at       DateTime  @default(now())
    updated_at       DateTime  @default(now())

    @@map("profile")
}

model Account {
    id                     Int       @id @default(autoincrement())
    profile                Profile   @relation(fields: [profile_id], references: [id])
    profile_id             Int       @unique
    plan                   Plan      @relation(fields: [plan_id], references: [id])
    plan_id                Int       @default(1)
    stripe_subscription_id String?
    stripe_customer_id     String?
    current_period_ends    DateTime?
    created_at             DateTime  @default(now())
    updated_at             DateTime  @default(now())

    @@map("account")
}

model Note {
    id         Int      @id @default(autoincrement())
    title      String
    content    String
    Profile    Profile  @relation(fields: [profile_id], references: [id])
    profile_id Int
    created_at DateTime @default(now())
    updated_at DateTime @default(now())

    @@map("note")
}

model Plan {
    id                Int       @id @default(autoincrement())
    name              String    @unique
    audience          String
    description       String
    features          String[]
    featured          Boolean   @default(false)
    price             Int
    accounts          Account[]
    max_notes         Int       @default(100)
    stripe_product_id String?
    created_at        DateTime  @default(now())
    updated_at        DateTime  @default(now())

    @@map("plan")
}

enum ROLE {
    ADMIN
    USER
}
